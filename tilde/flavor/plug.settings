set ft=vim

" netwr settings
let g:netrw_liststyle=3
let g:netrw_banner=0

" vim-scala
au BufRead,BufNewFile *.sbt set filetype=scala

"set statusline^=%{coc#status()}

" I used this instead of coc_status()
" because coc#status includes both statusline
" information and diagnostic information
" since I display diagnostic on the far right,
" I don't want to also display it in the center again
function! CocExtensionProgress() abort
  return get(g:, 'coc_status', '')
endfunction
let g:airline_section_c = '%f%{CocExtensionProgress()}'

" airline
let g:airline_theme='one'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#coc#error_symbol = '✘ '
let g:airline#extensions#coc#warning_symbol = '⚠ '
let g:airline#extensions#coc#enabled = 1


if has('nvim')
  " nnoremap <silent> gd    <cmd>lua vim.lsp.buf.declaration()<CR>
  " nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
  " nnoremap <silent> K     <cmd>lua vim.lsp.buf.hover()<CR>
  " nnoremap <silent> gD    <cmd>lua vim.lsp.buf.implementation()<CR>
  " nnoremap <silent> <c-k> <cmd>lua vim.lsp.buf.signature_help()<CR>
  " nnoremap <silent> 1gD   <cmd>lua vim.lsp.buf.type_definition()<CR>
  " nnoremap <silent> gr    <cmd>lua vim.lsp.buf.references()<CR>
endif

" Configuration for vim-lsc
" let g:lsc_auto_map = v:true
" let g:lsc_server_commands = { 'scala': 'metals-vim' }

